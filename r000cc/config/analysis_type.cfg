<?xml version="1.0" encoding="UTF-8"?>
<bag xmlns:boolean="http://www.w3.org/2001/XMLSchema#boolean" xmlns:exsl="http://exslt.org/common" xmlns:int="http://www.w3.org/2001/XMLSchema#int" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
 <internal>
  <name>%ConcurrencyAtypeName</name>
  <shortName>%ConcurrencyAtypeShortName</shortName>
  <description>%ConcurrencyAtypeDescription</description>
  <abbreviation>cc</abbreviation>
  <alias>concurrency</alias>
  <int:schemaVersion>1</int:schemaVersion>
  <int:contentVersion>1</int:contentVersion>
  <property name="helpId">configs.analysis_type-concurrency_f1102</property>
 </internal>
 <prerequisites>
  <rule>
   <ruleExpr>$isTPSSAvailable == false</ruleExpr>
   <error>%RunssConcurrencyNotSupported</error>
  </rule>
  <rule>
   <ruleExpr>$isPtraceScopeLimited == true</ruleExpr>
   <error>%RunssPtraceScopeLimited</error>
  </rule>
 </prerequisites>
 <knobs xsl:version="1.0" exsl:keep_exsl_namespace="">
  <stringKnob id="initialViewpoint" displayName="%InitialViewpoint" boolean:visible="false">
   <defaultValue>%HotspotsByCPUUsageViewpointName</defaultValue>
  </stringKnob>
  <intKnob id="samplingInterval" displayName="%SamplingInterval" cliName="sampling-interval">
   <description>%SamplingIntervalDescription</description>
   <int:min>1</int:min>
   <int:max>1000</int:max>
   <int:defaultValue>10</int:defaultValue>
  </intKnob>
  <booleanKnob id="userTasksCollection" displayName="%UserTasksCollection" boolean:visible="true" cliName="enable-user-tasks">
   <description>%UserTasksCollectionDescription</description>
   <boolean:defaultValue>false</boolean:defaultValue>
  </booleanKnob>
  <booleanKnob id="userSyncCollection" displayName="%UserSyncCollection" boolean:visible="true" cliName="enable-user-sync">
   <description>%UserSyncCollectionDescription</description>
   <boolean:defaultValue>false</boolean:defaultValue>
  </booleanKnob>
  <booleanKnob id="gpuDXCollectionDeprecated" displayName="%GpuDXCollection" boolean:visible="false" cliName="gpu-dx-mode">
   <description>%GpuDXCollectionDescription</description>
   <boolean:defaultValue>false</boolean:defaultValue>
  </booleanKnob>
  <booleanKnob id="gpuUsageCollection" cliName="enable-gpu-usage">
   <xsl:choose>
    <xsl:when test="exsl:ctx('targetOS')='Windows'">
     <xsl:attribute name="displayName">%GpuDXCollection</xsl:attribute>
     <xsl:attribute name="boolean:visible">true</xsl:attribute>
     <description>%GpuDXCollectionDescription</description>
    </xsl:when>
    <xsl:otherwise>
     <xsl:attribute name="displayName">%IGFXFtraceEventsCollection</xsl:attribute>
     <xsl:attribute name="boolean:visible">false</xsl:attribute>
     <xsl:if test="exsl:ctx('targetOS')='Android' or exsl:ctx('targetOS')='Linux'">
      <xsl:attribute name="boolean:visible">true</xsl:attribute>
     </xsl:if>
     <description>%IGFXFtraceEventsCollectionDescription</description>
    </xsl:otherwise>
   </xsl:choose>
   <boolean:defaultValue>false</boolean:defaultValue>
  </booleanKnob>
  <enumKnob id="gpuCountersCollection" displayName="%GpuCountersCollection" boolean:visible="false" cliName="gpu-counters-mode">
   <description>%GpuCountersCollectionDescription</description>
   <values>
    <value displayName="%None">none</value>
    <value displayName="%GpuOverview">overview</value>
    <value displayName="%GpuComputeBasic">global-local-accesses</value>
    <xsl:if test="exsl:ctx('PlatformIndex', 0)=6">
     <value displayName="%GpuComputeExtended">compute-extended</value>
    </xsl:if>
    <xsl:if test="exsl:is_experimental('gpu-metrics2')">
     <value displayName="%GpuPreset3">preset3</value>
     <value displayName="%GpuPreset4">preset4</value>
     <value displayName="%GpuPreset5">preset5</value>
    </xsl:if>
    <defaultValue>none</defaultValue>
   </values>
  </enumKnob>
  <xsl:if test="exsl:ctx('targetOS')='Windows' or exsl:ctx('targetOS')='Android' or (exsl:ctx('targetOS')='Linux' and exsl:is_experimental('gpu-metrics2'))">
   <rule>
    <enumKnob idToOverwrite="gpuCountersCollection" boolean:visible="true"/>
   </rule>
  </xsl:if>
  <intKnob id="gpuSamplingInterval" displayName="%GpuSamplingInterval" boolean:visible="false" cliName="gpu-sampling-interval">
   <description>%GpuSamplingIntervalDescription</description>
   <int:min>10</int:min>
   <int:max>10000</int:max>
   <int:defaultValue>1000</int:defaultValue>
  </intKnob>
  <booleanKnob id="gpuOpenCLCollection" displayName="%GpuOpenCLCollection" cliName="enable-gpu-runtimes">
   <xsl:attribute name="boolean:visible">
    <xsl:value-of select="exsl:ctx('OS')='Windows' or exsl:ctx('OS')='Linux'"/>
   </xsl:attribute>
   <description>%GpuOpenCLCollectionDescription</description>
   <boolean:defaultValue>false</boolean:defaultValue>
  </booleanKnob>
 </knobs>
 <analysis>
  <collector id="runss">
   <collectorKnob knob="collectSamplesMode">stack</collectorKnob>
   <collectorKnob knob="collectWaitsMode">stack</collectorKnob>
   <collectorKnob knob="collectIoMode">stack</collectorKnob>
   <collectorKnob knob="collectSignalsMode">stack</collectorKnob>
   <collectorKnob knob="samplingInterval">$samplingInterval</collectorKnob>
   <collectorKnob knob="collectUserTasksMode">$userTasksCollection</collectorKnob>
   <collectorKnob knob="collectUserSyncMode">$userSyncCollection</collectorKnob>
   <collectorKnob knob="gpuCounters">$gpuCountersCollection</collectorKnob>
   <collectorKnob knob="gpuSamplingInterval">$gpuSamplingInterval</collectorKnob>
   <collectorKnob knob="gpuUsage">$gpuUsageCollection</collectorKnob>
   <collectorKnob knob="collectGpuOpenCl">$gpuOpenCLCollection</collectorKnob>
   <boolean:collectorKnob knob="spinOverheadTimeExpandedData">true</boolean:collectorKnob>
  </collector>
  <rule>
   <ruleExpr>$gpuDXCollectionDeprecated == true</ruleExpr>
   <collector idToAppend="runss">
    <collectorKnob knob="gpuUsage">$gpuDXCollectionDeprecated</collectorKnob>
   </collector>
  </rule>
 </analysis>
</bag>
