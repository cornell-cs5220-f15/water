%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.1.0.604 (R2013a). Operating System: Darwin 14.5.0 Darwin Kernel Version 14.5.0: Wed Jul 29 02:26:53 PDT 2015; root:xnu-2782.40.9~1/RELEASE_X86_64 x86_64.
%%Title: /Users/lbacker/Desktop/scaleff.eps
%%CreationDate: 10/27/2015  14:17:21
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:  -369   111   982   681
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:  -369   111   982   681
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -4428 8172 csm

    0     0 16212  6829 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 16213 6830 rf
6 w
0 5566 12563 0 0 -5566 2108 6078 4 MP
PP
-12563 0 0 5566 12563 0 0 -5566 2108 6078 5 MP stroke
4 w
DO
SO
6 w
0 sg
2108 6078 mt 14671 6078 L
2108  512 mt 14671  512 L
2108 6078 mt 2108  512 L
14671 6078 mt 14671  512 L
2108 6078 mt 14671 6078 L
2108 6078 mt 2108  512 L
2108 6078 mt 2108 5952 L
2108  512 mt 2108  637 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

2075 6223 mt 
(0) s
3902 6078 mt 3902 5952 L
3902  512 mt 3902  637 L
3869 6223 mt 
(5) s
5697 6078 mt 5697 5952 L
5697  512 mt 5697  637 L
5631 6223 mt 
(10) s
7492 6078 mt 7492 5952 L
7492  512 mt 7492  637 L
7426 6223 mt 
(15) s
9287 6078 mt 9287 5952 L
9287  512 mt 9287  637 L
9221 6223 mt 
(20) s
11082 6078 mt 11082 5952 L
11082  512 mt 11082  637 L
11016 6223 mt 
(25) s
12877 6078 mt 12877 5952 L
12877  512 mt 12877  637 L
12811 6223 mt 
(30) s
14672 6078 mt 14672 5952 L
14672  512 mt 14672  637 L
14606 6223 mt 
(35) s
2108 6078 mt 2233 6078 L
14672 6078 mt 14546 6078 L
2007 6122 mt 
(0) s
2108 5521 mt 2233 5521 L
14672 5521 mt 14546 5521 L
1907 5565 mt 
(0.1) s
2108 4964 mt 2233 4964 L
14672 4964 mt 14546 4964 L
1907 5008 mt 
(0.2) s
2108 4408 mt 2233 4408 L
14672 4408 mt 14546 4408 L
1907 4452 mt 
(0.3) s
2108 3851 mt 2233 3851 L
14672 3851 mt 14546 3851 L
1907 3895 mt 
(0.4) s
2108 3295 mt 2233 3295 L
14672 3295 mt 14546 3295 L
1907 3339 mt 
(0.5) s
2108 2738 mt 2233 2738 L
14672 2738 mt 14546 2738 L
1907 2782 mt 
(0.6) s
2108 2181 mt 2233 2181 L
14672 2181 mt 14546 2181 L
1907 2225 mt 
(0.7) s
2108 1625 mt 2233 1625 L
14672 1625 mt 14546 1625 L
1907 1669 mt 
(0.8) s
2108 1068 mt 2233 1068 L
14672 1068 mt 14546 1068 L
1907 1112 mt 
(0.9) s
2108  512 mt 2233  512 L
14672  512 mt 14546  512 L
2007  556 mt 
(1) s
2108 6078 mt 14671 6078 L
2108  512 mt 14671  512 L
2108 6078 mt 2108  512 L
14671 6078 mt 14671  512 L
gs 2108 512 12565 5567 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
8616 413 1436 311 718 1237 359 3415 2466 512 5 MP stroke
/c9 { 0.000000 0.500000 0.000000 sr} bdef
c9
1436 175 1436 222 1436 681 718 1420 359 2814 2466 512 6 MP stroke
/c10 { 1.000000 0.000000 0.000000 sr} bdef
c10
1436 911 718 1518 359 2391 2466 512 4 MP stroke
gr

c10
0 sg
8089 6366 mt 
(Processors) s
1825 3960 mt  -90 rotate
(Strong Scaling Efficiency) s
90 rotate
7725  417 mt 
(Strong Scaling Efficiency) s
2091 6121 mt 
( ) s
14656  554 mt 
( ) s
1 sg
0 480 2213 0 0 -480 12399 1052 4 MP
PP
-2213 0 0 480 2213 0 0 -480 12399 1052 5 MP stroke
4 w
DO
SO
6 w
0 sg
12399 1052 mt 14612 1052 L
12399  572 mt 14612  572 L
12399 1052 mt 12399  572 L
14612 1052 mt 14612  572 L
12399 1052 mt 14612 1052 L
12399 1052 mt 12399  572 L
12399 1052 mt 14612 1052 L
12399  572 mt 14612  572 L
12399 1052 mt 12399  572 L
14612 1052 mt 14612  572 L
12846  706 mt 
(Original C Code) s
gs 12399 572 2214 481 rc
c8
344 0 12467 663 2 MP stroke
gr

c8
0 sg
12846  855 mt 
(Our C Code on Compute Nodes) s
gs 12399 572 2214 481 rc
c9
344 0 12467 812 2 MP stroke
gr

c9
0 sg
12846 1003 mt 
(Our C Code on Xeon Phi) s
gs 12399 572 2214 481 rc
c10
344 0 12467 960 2 MP stroke
gr

c10

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
